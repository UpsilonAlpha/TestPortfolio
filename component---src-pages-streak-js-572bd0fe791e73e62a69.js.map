{"version":3,"file":"component---src-pages-streak-js-572bd0fe791e73e62a69.js","mappings":"0IAGMA,G,QACN,CACEC,MAAO,UACPC,WAAY,UACZC,WAAY,WACZC,OAAQ,WASJC,EACN,CACEC,OAAQ,UACRC,QAAS,YACTL,WAAY,UACZE,OAAQ,QA0BV,UAtBe,WACb,OACE,wBAAMI,MAAOR,GACX,uBAAKQ,MAAOH,GACV,oCACA,2BACA,8FACA,iTACA,0BACI,2DACA,0DACA,oEAEJ,kVACA,+SACA,4OACA","sources":["webpack://test-portfolio/./src/pages/Streak.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst pageStyles = \r\n{\r\n  color: \"#ddffdd\",\r\n  background: '#080808',\r\n  fontFamily: \"Consolas\",\r\n  height: \"100rem\",\r\n}\r\n\r\nconst linkStyles = \r\n{\r\n  color: \"#55e575\",\r\n  textDecoration: \"none\",\r\n}\r\n\r\nconst centerDiv =\r\n{\r\n  margin: \"0 20rem\",\r\n  padding: \"5rem 5rem\",\r\n  background: '#151515',\r\n  height: \"100%\",\r\n}\r\n\r\n// markup\r\nconst Streak = () => {\r\n  return (\r\n    <main style={pageStyles}>\r\n      <div style={centerDiv}>\r\n        <h1>Streak</h1>\r\n        <br/>\r\n        <p>I never thought building this application would teach me so much.</p>\r\n        <p>This is because I not only decided to make a competetive quiz app, but I also didn't want to have to make each deck of questions by hand. That's why I decided to integrate my app with the online flashcard builder Quizlet. In order to do this I had to learn three key concepts:</p>\r\n        <ol>\r\n            <li>Make API calls to gather data</li>\r\n            <li>Read and write to JSON files</li>\r\n            <li>Create a gameshow-esque buzzer system</li>\r\n        </ol>\r\n        <p>Me and a few other classmates used the online service Quizlet to store flashcards. However in group revision sessions I found that there was almost a gameshow aspect to this humble learning device. As a result I did research to find a quizlet API that allowed me to request decks of flashcards in JSON format.</p>\r\n        <p>I then added functionality to save the flashcard deck to one's own computer, allowing people to play offline. Then, when playing I read from the JSON file in order to display questions on screen. Players then had to press a 'buzzer' key to be allowed to answer the question.</p>\r\n        <p>In order to increase the stakes I also made the text scroll across the screen to emulate a gameshow host reading the question out. I also added a timer after each buzzer press in order to answer the question</p>\r\n        <p>This project was fundamental for teaching me how to use APIs and JSON in combination with a native app that can read/write to files. I essentially learned all the skills required to make a fully featured desktop application. This foundation helped me a lot with other projects such as making a discord bot.</p>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Streak\r\n"],"names":["pageStyles","color","background","fontFamily","height","centerDiv","margin","padding","style"],"sourceRoot":""}